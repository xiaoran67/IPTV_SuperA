name: EPG Update
on:
  schedule:
    - cron: '00 5,16 * * *'
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      # 使用 actions/checkout@v3 动作检出仓库代码到工作目录
    - name: Set up Git user
      run: |
        git config --local user.name "github-actions[bot]"
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
      # 设置本地 Git 用户名和邮箱，以便后续提交代码时使用
    - name: Download EPG File
      run: wget http://epg.51zmt.top:8000/e.xml -O epg.xml
      # 使用 wget 命令从指定 URL 下载 EPG 文件并保存为 epg.xml
    - name: Calculate SHA-256 hash of epg.xml
      id: calculate_hash
      run: |
        echo "hash=$(sha256sum epg.xml | awk '{print $1}')" >> "$GITHUB_ENV"
      # 计算下载的 epg.xml 文件的 SHA-256 哈希值，并将其存储在环境变量 hash 中，使用 $GITHUB_ENV 文件
    - name: Get previous SHA-256 hash from last commit
      id: get_previous_hash
      run: |
        if [ -f epg.xml ]; then
          echo "previous_hash=$(git show HEAD:epg.xml | sha256sum | awk '{print $1}')" >> "$GITHUB_ENV"
        else
          echo "previous_hash=none" >> "$GITHUB_ENV"
        fi
      # 获取上次提交中 epg.xml 文件的 SHA-256 哈希值，并将其存储在环境变量 previous_hash 中，使用 $GITHUB_ENV 文件。如果文件在上次提交中不存在，则将 previous_hash 设置为 none
    - name: Compare hashes and update if different
      run: |
        if [ "${{ env.hash }}" != "${{ env.previous_hash }}" ]; then
          git add epg.xml
          git commit -m "✔️ $(date +'%Y-%m-%d %H:%M:%S')"
          git push origin main
        else
          echo "No changes detected in epg.xml, skipping commit."
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # 比较当前 epg.xml 文件的哈希值与上次提交中的哈希值。
      # 如果哈希值不同，则将文件添加到 Git 并提交更改，然后推送到 main 分支。
      # 如果哈希值相同，则输出 "No changes detected in epg.xml, skipping commit." 并跳过提交和推送
